
--------------------------------------------------------------------------------
 
2.gulp的使用
  ● node平台:
      ○ npm 局部安装: 就是在本地文件夹中会创建一个 node_modules 这样类似的文件夹,并在网络上下载 需要 的 js 库( 不单是一个 js 文件, 是一个 node 项目, 称为 包 )放到该文件夹中
      ○ 我们在写 node 代码的时候, node 平台会自动的在 node_modules 文件夹中去查找对象的 数据. var gulp = require( 'gulp' )
  ● 淘宝的 NPM 镜像:     --registry=https://registry.npm.taobao.org
  ● gulp的作用
      ○ 为了处理代码( 合并, 压缩 )
      ○ 了解构建工具的使用方式( 前端工具都是使用node平台 )
      ○ 了解一下node代码的编写
  ● 安装:
      ○ 全局安装gulp
              ● 打开命令行,键入命令
              ● npm install -g gulp(--registry=https://registry.npm.taobao.org)
              ● 好比是在安装运行时的核心文件, 就是在安装这个命令
      ○ 本地安装
              ● 建一个文件夹( 工作目录)
              ● 进入该目录,键入命令
                  ○ npm install gulp (--save)
                  ○ 相当于是在装插件, 这里的插件是由 gulp 所使用的
  ● 使用gulp的步骤
              ● 全局安装:npm install -g gulp
              ● 本地安装:npm install gulp
              ● 安装插件,安装需要具体实现功能的代码
                  ○  npm install gulp-concat gulp-uglify
              ● 在工作目录下创建(touch)一个文件gulpfile.js
              ● 使用js编码文件,创建task任务
[图片]
              ● 执行gulp定义的任务,在工作目录下执行gulp 任务名
[图片]

--------------------------------------------------------------------------------

3.gulp的哲学就是拿来主义
  ● 要执行什么事情就拿已经做好的工具即可
  ● 所以要合并文件只需要找到可以合并文件的gulp包即可
  ●  如何去找:只需要使用
              ● http://npmjs.org/plugins 所有的node工具包
              ● http://gulpjs.com/plugins  只含有gulp的工具包
  ● dependencies  依赖,描述的含义是该项目中需要使用的包
  ● devDependcues 开发依赖,项目在开发阶段使用的包;


--------------------------------------------------------------------------------

4.包安装
  ● 包:就是js库(理解)
  ● 
  ● 安装
      ○ 全局安装:
          ■ npm install -g gulp (--registry=http://registry.npm.taobao.org)
      ○ 本地( 局部 )安装(相当于在装插件,这里的插件是由gulp所使用的):
          ■ npm install gulp
      ○ 安装插件:安装需要具体实现共能的代码
          ■ npm install gulp-concat

--------------------------------------------------------------------------------

5.目录的规则
        /   正斜线, 斜线;  
        \   反斜线, 在不冲突的情况下简称为斜线

        unix 操作系统, 其中用于描述路径的 就是 斜线 /
            / 称为根目录
        linux 操作系统( 可以认为: 免费的 unix )
            / 根目录
        苹果操作系统( MacOS 是 Unix 的衍生版本 )
            / 根目录
        DOS 一开始就是别人模拟 unix 写的一个系统
            采用了新的标注方式, 分了盘符( C:\, D:\ 等 )
            采用反斜线来描述目录的路径( 在 win 中如果不冲突, 使用正斜线可以使用 )
        
        在目录规则中使用 . 表示当前目录, 使用 .. 表示父级目录
        因此在描述本地资源的时候可以看到
            <script src="./123.js"></script>
            <script src="123.js"></script>
            <script src="../src/123.js"></script>
            <script src="/src/123.js"></script>

--------------------------------------------------------------------------------

6.gulp的补充
  ● 有时需要在加载的时候需要按照指定的顺序进行加载,就不能舒勇gulp.arc( src/*)
  ● 可以使用数组,将文字的名字一一列出,即(['itcast.core.js','Itcast.dom.js'])
  ● 希望按照一定的顺序依次执行gulp中的任务
      ○ 需要配置任务依赖
      ○ 注意;gulp具有下面的语法
          ■ gulp.task( '命令名',[ 'task名字',... ], function(){});
          ■ 控制多个task的执行顺序
  ● node是异步的
      ○ 与js中的setTimeout一样
      ○ 在浏览器的js中有一个函数(事件)队列
      ○ node是'单线程'的异步编程
      ○ 此时是同步的
[图片]
  ● gulp有一个默认的命令就是default
[图片]

--------------------------------------------------------------------------------

7.angularjs
  ● 三大流行框架
      ○ angular --> angularjs(angular1)   angular(angular2)
      ○ vue
      ○ react
  ● 网站的发展流程与运行过程
      ○ 计算机的物理结构与拓扑结构
      ○ 计算机可以放在别的地方,但是使用网络可以使得计算机放在别的地方与放在我们身边一样的使用
      ○ 互联网:就是将全世界的很多的局域网链接起来构成了互联网
      ○ 网站模型:
          ■ 客户机    服务器
      ○ 早起的网站就是单纯的文字页面内容没有动画修饰等内容的
      ○ url 的基本格式
      ○ 协议://主机地址(名):端口名/路径?参数
          ■ http://  
              ● 地址Ip
                  ○ :80
                      ■ 路径的含义就是在寻找网站根目录中的文件或文件夹(一般服务器都会配置默认文件)
      ○ 使用"协议://主机地址(名):端口号/" 可以定位到一台计算机的一个网站中就是一台计算机的一个文件夹中.
      ○  路径的含义就是在寻找 网站根目录中的 文件或文件夹( 一般 服务器都会配置默认文件 )
      ○ http服务器
          ■ npm install -g http-serve
      ○ 静态网站
      ○ 为什么需要动态网站
          ■  缺点:前后台编码混编
      ○ webApi
          ■ 前后端分离: webApi

























